클라우드 분류
- IaaS
- PaaS
- SaaS

어떤 것을 서비스해주느냐? 에 따라 분류된다. 
멀티 테넌트(프로젝트) 
1. 클라우드는 고객의 요구에 유연한 대응(무중단 서비스를 제공해야 한다-지역간 서비스의 이동이 가능해야 한다, 서비스의 요구사항[접속자, 트래픽]이 많아졌을 경우-auto scale)이 가능해야 한다.
2. 클라우드 서비스를 운영하는 CSP 입장에서는 동시에 다수의 서비스를 제공할 수 있어야 하고  또 회수 할 수 있어야 한다. 

  초기 legacy DC 에서는 불가능 -> 초기 클라우드(최근까지) 서비스 요청(EC2의 예, 인스턴스를 배포하기 위해서는 flavor 선택, VPC선택, 키 생성, 이미지 선택, 디스크 사이즈, auto-scale 여부, Security Group 선택... 등등)  -> 재사용성이 가능해야 한다. -> 자동화(스크립트의 작성 :  bash/perl/python-ruby) -> 대시보드 개발 인력(하나의 대시보드 내에 ansible, openstack, k8s, docker..., aws - php, java[jsp], javascript/node.js, golang - MSA) 

자동화 도구
ansible 의 구성요소
1. ansible 본체 -> ssh 를 이용하여 인벤토리 목록에 있는 노드(호스트)들에게 명령을 전달
2. 인벤토리 -> 앤서블 본체로 부터 명령을 전달받아 서비스를 배포하는 역할을 하는 서버
                       이 서버들의 목록을 인벤토리라고 하며 대표적으로 두가지 방법을 이용하여 
                       인벤토리를 관리한다.
                       2.1 : ansible 본체 내부에 /etc/ansible/hosts 에 작성한다.
                       2.2 : 별도의 inventory 파일을 만들고 해당 파일 내부에 목록을 작성하고
                                ansible-playbook 에서 애플리케이션을 배포할 때 이 목록을 불러온다

 앤서블은 "어느어느 서버들에게 웹서비스를 배포하라"
"어느어느 서버들에게" : inventory
"웹 서비스를 배포하라" : ansible-playbook 에 기록해 둔다. 



실습환경 구성

-> 앤서블이 설치된 서버 +  서비스를 배포해야할 서버들
   (inventory 에 등록------------>)

- 위의 환경을 만들기 위해서는 기 구성된 환경
- 인프라 환경을 만들 수 있는 도구를 이용 : vagrant 
  vagrant 는 하이퍼바이저를 이용하여 가상 서버를 배포할 수 있다.
  - 이용할 수 있는 하이퍼바이저는 : virtualbox, vmware, libvirt(kvm), 외에 다수의 퍼블릭 클라우드 환경과 연동하여 구성이 가능하다.
    또한 해당 하이퍼바이저용 별도의 이미지를 제공한다. (vagrant box)
- 반드시 VM 을 이용하고자 한다면 vagrant 를 이용해야 하는가? 그렇지 않다.  kvm 내에 virt-builder 이용하여 vm   배포하면 된다.

결론 : vagrant 로 환경을 구성하고 한 대의 서버에는 ansible 을 설치한다. 다른 3대의 서버는 ansible 로 부터 명령을 받아 서비스를 배포하며 해당 서버들의 주소 또는 도메인 명은 ansible 내에 inventory 로 기록된다.







vagrant init 

---
- name: Setup for the Ansible's Environment
  hosts: localhost
  gather_facts: no

  tasks:
    -


